/*
 * OpenAI API
 * The OpenAI REST API. Please see https://platform.openai.com/docs/api-reference for more details.
 *
 * The version of the OpenAPI document: 2.3.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.model;

import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonTypeName;
import com.fasterxml.jackson.annotation.JsonValue;
import java.math.BigDecimal;
import java.util.HashMap;
import java.util.Map;
import org.openapitools.client.model.ChatCompletionStreamOptions;
import org.openapitools.client.model.CreateCompletionRequestModel;
import org.openapitools.client.model.CreateCompletionRequestPrompt;
import org.openapitools.client.model.CreateCompletionRequestStop;
import org.openapitools.jackson.nullable.JsonNullable;
import com.fasterxml.jackson.annotation.JsonIgnore;
import org.openapitools.jackson.nullable.JsonNullable;
import java.util.NoSuchElementException;
import org.junit.jupiter.api.Assertions;
import org.junit.jupiter.api.Disabled;
import org.junit.jupiter.api.Test;

/**
 * Model tests for CreateCompletionRequest
 */
class CreateCompletionRequestTest {
    private final CreateCompletionRequest model = new CreateCompletionRequest();

    /**
     * Model tests for CreateCompletionRequest
     */
    @Test
    void testCreateCompletionRequest() {
        // TODO: test CreateCompletionRequest
    }

    /**
     * Test the property 'model'
     */
    @Test
    void modelTest() {
        // TODO: test model
    }

    /**
     * Test the property 'prompt'
     */
    @Test
    void promptTest() {
        // TODO: test prompt
    }

    /**
     * Test the property 'bestOf'
     */
    @Test
    void bestOfTest() {
        // TODO: test bestOf
    }

    /**
     * Test the property 'echo'
     */
    @Test
    void echoTest() {
        // TODO: test echo
    }

    /**
     * Test the property 'frequencyPenalty'
     */
    @Test
    void frequencyPenaltyTest() {
        // TODO: test frequencyPenalty
    }

    /**
     * Test the property 'logitBias'
     */
    @Test
    void logitBiasTest() {
        // TODO: test logitBias
    }

    /**
     * Test the property 'logprobs'
     */
    @Test
    void logprobsTest() {
        // TODO: test logprobs
    }

    /**
     * Test the property 'maxTokens'
     */
    @Test
    void maxTokensTest() {
        // TODO: test maxTokens
    }

    /**
     * Test the property 'n'
     */
    @Test
    void nTest() {
        // TODO: test n
    }

    /**
     * Test the property 'presencePenalty'
     */
    @Test
    void presencePenaltyTest() {
        // TODO: test presencePenalty
    }

    /**
     * Test the property 'seed'
     */
    @Test
    void seedTest() {
        // TODO: test seed
    }

    /**
     * Test the property 'stop'
     */
    @Test
    void stopTest() {
        // TODO: test stop
    }

    /**
     * Test the property 'stream'
     */
    @Test
    void streamTest() {
        // TODO: test stream
    }

    /**
     * Test the property 'streamOptions'
     */
    @Test
    void streamOptionsTest() {
        // TODO: test streamOptions
    }

    /**
     * Test the property 'suffix'
     */
    @Test
    void suffixTest() {
        // TODO: test suffix
    }

    /**
     * Test the property 'temperature'
     */
    @Test
    void temperatureTest() {
        // TODO: test temperature
    }

    /**
     * Test the property 'topP'
     */
    @Test
    void topPTest() {
        // TODO: test topP
    }

    /**
     * Test the property 'user'
     */
    @Test
    void userTest() {
        // TODO: test user
    }

}
