/*
 * OpenAI API
 * The OpenAI REST API. Please see https://platform.openai.com/docs/api-reference for more details.
 *
 * The version of the OpenAPI document: 2.3.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.model;

import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonTypeName;
import com.fasterxml.jackson.annotation.JsonValue;
import java.math.BigDecimal;
import java.util.ArrayList;
import java.util.Arrays;
import java.util.List;
import org.openapitools.client.model.RealtimeResponseCreateParamsMaxResponseOutputTokens;
import org.openapitools.client.model.RealtimeResponseCreateParamsToolsInner;
import org.openapitools.client.model.RealtimeSessionCreateResponseClientSecret;
import org.openapitools.client.model.RealtimeSessionCreateResponseTurnDetection;
import org.openapitools.client.model.RealtimeSessionInputAudioTranscription;
import org.junit.jupiter.api.Assertions;
import org.junit.jupiter.api.Disabled;
import org.junit.jupiter.api.Test;

/**
 * Model tests for RealtimeSessionCreateResponse
 */
class RealtimeSessionCreateResponseTest {
    private final RealtimeSessionCreateResponse model = new RealtimeSessionCreateResponse();

    /**
     * Model tests for RealtimeSessionCreateResponse
     */
    @Test
    void testRealtimeSessionCreateResponse() {
        // TODO: test RealtimeSessionCreateResponse
    }

    /**
     * Test the property 'clientSecret'
     */
    @Test
    void clientSecretTest() {
        // TODO: test clientSecret
    }

    /**
     * Test the property 'modalities'
     */
    @Test
    void modalitiesTest() {
        // TODO: test modalities
    }

    /**
     * Test the property 'instructions'
     */
    @Test
    void instructionsTest() {
        // TODO: test instructions
    }

    /**
     * Test the property 'voice'
     */
    @Test
    void voiceTest() {
        // TODO: test voice
    }

    /**
     * Test the property 'inputAudioFormat'
     */
    @Test
    void inputAudioFormatTest() {
        // TODO: test inputAudioFormat
    }

    /**
     * Test the property 'outputAudioFormat'
     */
    @Test
    void outputAudioFormatTest() {
        // TODO: test outputAudioFormat
    }

    /**
     * Test the property 'inputAudioTranscription'
     */
    @Test
    void inputAudioTranscriptionTest() {
        // TODO: test inputAudioTranscription
    }

    /**
     * Test the property 'turnDetection'
     */
    @Test
    void turnDetectionTest() {
        // TODO: test turnDetection
    }

    /**
     * Test the property 'tools'
     */
    @Test
    void toolsTest() {
        // TODO: test tools
    }

    /**
     * Test the property 'toolChoice'
     */
    @Test
    void toolChoiceTest() {
        // TODO: test toolChoice
    }

    /**
     * Test the property 'temperature'
     */
    @Test
    void temperatureTest() {
        // TODO: test temperature
    }

    /**
     * Test the property 'maxResponseOutputTokens'
     */
    @Test
    void maxResponseOutputTokensTest() {
        // TODO: test maxResponseOutputTokens
    }

}
