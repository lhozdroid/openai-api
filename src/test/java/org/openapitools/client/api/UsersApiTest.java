/*
 * OpenAI API
 * The OpenAI REST API. Please see https://platform.openai.com/docs/api-reference for more details.
 *
 * The version of the OpenAPI document: 2.3.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.api;

import org.openapitools.client.ApiException;
import org.openapitools.client.model.User;
import org.openapitools.client.model.UserDeleteResponse;
import org.openapitools.client.model.UserListResponse;
import org.openapitools.client.model.UserRoleUpdateRequest;
import org.junit.jupiter.api.Assertions;
import org.junit.jupiter.api.Disabled;
import org.junit.jupiter.api.Test;

import java.time.LocalDate;
import java.time.OffsetDateTime;
import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

/**
 * API tests for UsersApi
 */
@Disabled
public class UsersApiTest {

    private final UsersApi api = new UsersApi();

    /**
     * Deletes a user from the organization.
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void deleteUserTest() throws ApiException {
        String userId = null;
        UserDeleteResponse response = api.deleteUser(userId);

        // TODO: test validations
    }
    /**
     * Lists all of the users in the organization.
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void listUsersTest() throws ApiException {
        Integer limit = null;
        String after = null;
        UserListResponse response = api.listUsers(limit, after);

        // TODO: test validations
    }
    /**
     * Modifies a user&#39;s role in the organization.
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void modifyUserTest() throws ApiException {
        String userId = null;
        UserRoleUpdateRequest userRoleUpdateRequest = null;
        User response = api.modifyUser(userId, userRoleUpdateRequest);

        // TODO: test validations
    }
    /**
     * Retrieves a user by their identifier.
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void retrieveUserTest() throws ApiException {
        String userId = null;
        User response = api.retrieveUser(userId);

        // TODO: test validations
    }
}
