/*
 * OpenAI API
 * The OpenAI REST API. Please see https://platform.openai.com/docs/api-reference for more details.
 *
 * The version of the OpenAPI document: 2.3.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.model;

import java.util.Objects;
import java.util.Arrays;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonTypeName;
import com.fasterxml.jackson.annotation.JsonValue;
import org.openapitools.client.model.FileSearchRankingOptions;
import com.fasterxml.jackson.annotation.JsonPropertyOrder;
import com.fasterxml.jackson.annotation.JsonTypeName;
import java.io.UnsupportedEncodingException;
import java.net.URLEncoder;
import java.util.StringJoiner;

/**
 * Overrides for the file search tool.
 */
@JsonPropertyOrder({
  AssistantToolsFileSearchFileSearch.JSON_PROPERTY_MAX_NUM_RESULTS,
  AssistantToolsFileSearchFileSearch.JSON_PROPERTY_RANKING_OPTIONS
})
@JsonTypeName("AssistantToolsFileSearch_file_search")
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2025-01-14T12:15:51.997600814-05:00[US/Eastern]", comments = "Generator version: 7.10.0")
public class AssistantToolsFileSearchFileSearch {
  public static final String JSON_PROPERTY_MAX_NUM_RESULTS = "max_num_results";
  @javax.annotation.Nullable
  private Integer maxNumResults;

  public static final String JSON_PROPERTY_RANKING_OPTIONS = "ranking_options";
  @javax.annotation.Nullable
  private FileSearchRankingOptions rankingOptions;

  public AssistantToolsFileSearchFileSearch() {
  }

  public AssistantToolsFileSearchFileSearch maxNumResults(@javax.annotation.Nullable Integer maxNumResults) {
    
    this.maxNumResults = maxNumResults;
    return this;
  }

  /**
   * The maximum number of results the file search tool should output. The default is 20 for &#x60;gpt-4*&#x60; models and 5 for &#x60;gpt-3.5-turbo&#x60;. This number should be between 1 and 50 inclusive.  Note that the file search tool may output fewer than &#x60;max_num_results&#x60; results. See the [file search tool documentation](/docs/assistants/tools/file-search#customizing-file-search-settings) for more information. 
   * minimum: 1
   * maximum: 50
   * @return maxNumResults
   */
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_MAX_NUM_RESULTS)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public Integer getMaxNumResults() {
    return maxNumResults;
  }


  @JsonProperty(JSON_PROPERTY_MAX_NUM_RESULTS)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setMaxNumResults(@javax.annotation.Nullable Integer maxNumResults) {
    this.maxNumResults = maxNumResults;
  }

  public AssistantToolsFileSearchFileSearch rankingOptions(@javax.annotation.Nullable FileSearchRankingOptions rankingOptions) {
    
    this.rankingOptions = rankingOptions;
    return this;
  }

  /**
   * Get rankingOptions
   * @return rankingOptions
   */
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_RANKING_OPTIONS)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public FileSearchRankingOptions getRankingOptions() {
    return rankingOptions;
  }


  @JsonProperty(JSON_PROPERTY_RANKING_OPTIONS)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setRankingOptions(@javax.annotation.Nullable FileSearchRankingOptions rankingOptions) {
    this.rankingOptions = rankingOptions;
  }

  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    AssistantToolsFileSearchFileSearch assistantToolsFileSearchFileSearch = (AssistantToolsFileSearchFileSearch) o;
    return Objects.equals(this.maxNumResults, assistantToolsFileSearchFileSearch.maxNumResults) &&
        Objects.equals(this.rankingOptions, assistantToolsFileSearchFileSearch.rankingOptions);
  }

  @Override
  public int hashCode() {
    return Objects.hash(maxNumResults, rankingOptions);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class AssistantToolsFileSearchFileSearch {\n");
    sb.append("    maxNumResults: ").append(toIndentedString(maxNumResults)).append("\n");
    sb.append("    rankingOptions: ").append(toIndentedString(rankingOptions)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

  /**
   * Convert the instance into URL query string.
   *
   * @return URL query string
   */
  public String toUrlQueryString() {
    return toUrlQueryString(null);
  }

  /**
   * Convert the instance into URL query string.
   *
   * @param prefix prefix of the query string
   * @return URL query string
   */
  public String toUrlQueryString(String prefix) {
    String suffix = "";
    String containerSuffix = "";
    String containerPrefix = "";
    if (prefix == null) {
      // style=form, explode=true, e.g. /pet?name=cat&type=manx
      prefix = "";
    } else {
      // deepObject style e.g. /pet?id[name]=cat&id[type]=manx
      prefix = prefix + "[";
      suffix = "]";
      containerSuffix = "]";
      containerPrefix = "[";
    }

    StringJoiner joiner = new StringJoiner("&");

    // add `max_num_results` to the URL query string
    if (getMaxNumResults() != null) {
      try {
        joiner.add(String.format("%smax_num_results%s=%s", prefix, suffix, URLEncoder.encode(String.valueOf(getMaxNumResults()), "UTF-8").replaceAll("\\+", "%20")));
      } catch (UnsupportedEncodingException e) {
        // Should never happen, UTF-8 is always supported
        throw new RuntimeException(e);
      }
    }

    // add `ranking_options` to the URL query string
    if (getRankingOptions() != null) {
      joiner.add(getRankingOptions().toUrlQueryString(prefix + "ranking_options" + suffix));
    }

    return joiner.toString();
  }

}

