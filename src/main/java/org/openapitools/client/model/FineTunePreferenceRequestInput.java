/*
 * OpenAI API
 * The OpenAI REST API. Please see https://platform.openai.com/docs/api-reference for more details.
 *
 * The version of the OpenAPI document: 2.3.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.model;

import java.util.Objects;
import java.util.Arrays;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonTypeName;
import com.fasterxml.jackson.annotation.JsonValue;
import java.util.ArrayList;
import java.util.Arrays;
import java.util.List;
import org.openapitools.client.model.FineTunePreferenceRequestInputInput;
import org.openapitools.client.model.FineTunePreferenceRequestInputPreferredCompletionInner;
import com.fasterxml.jackson.annotation.JsonPropertyOrder;
import com.fasterxml.jackson.annotation.JsonTypeName;
import java.io.UnsupportedEncodingException;
import java.net.URLEncoder;
import java.util.StringJoiner;

/**
 * The per-line training example of a fine-tuning input file for chat models using the dpo method.
 */
@JsonPropertyOrder({
  FineTunePreferenceRequestInput.JSON_PROPERTY_INPUT,
  FineTunePreferenceRequestInput.JSON_PROPERTY_PREFERRED_COMPLETION,
  FineTunePreferenceRequestInput.JSON_PROPERTY_NON_PREFERRED_COMPLETION
})
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2025-01-14T12:15:51.997600814-05:00[US/Eastern]", comments = "Generator version: 7.10.0")
public class FineTunePreferenceRequestInput {
  public static final String JSON_PROPERTY_INPUT = "input";
  @javax.annotation.Nullable
  private FineTunePreferenceRequestInputInput input;

  public static final String JSON_PROPERTY_PREFERRED_COMPLETION = "preferred_completion";
  @javax.annotation.Nullable
  private List<FineTunePreferenceRequestInputPreferredCompletionInner> preferredCompletion = new ArrayList<>();

  public static final String JSON_PROPERTY_NON_PREFERRED_COMPLETION = "non_preferred_completion";
  @javax.annotation.Nullable
  private List<FineTunePreferenceRequestInputPreferredCompletionInner> nonPreferredCompletion = new ArrayList<>();

  public FineTunePreferenceRequestInput() {
  }

  public FineTunePreferenceRequestInput input(@javax.annotation.Nullable FineTunePreferenceRequestInputInput input) {
    
    this.input = input;
    return this;
  }

  /**
   * Get input
   * @return input
   */
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_INPUT)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public FineTunePreferenceRequestInputInput getInput() {
    return input;
  }


  @JsonProperty(JSON_PROPERTY_INPUT)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setInput(@javax.annotation.Nullable FineTunePreferenceRequestInputInput input) {
    this.input = input;
  }

  public FineTunePreferenceRequestInput preferredCompletion(@javax.annotation.Nullable List<FineTunePreferenceRequestInputPreferredCompletionInner> preferredCompletion) {
    
    this.preferredCompletion = preferredCompletion;
    return this;
  }

  public FineTunePreferenceRequestInput addPreferredCompletionItem(FineTunePreferenceRequestInputPreferredCompletionInner preferredCompletionItem) {
    if (this.preferredCompletion == null) {
      this.preferredCompletion = new ArrayList<>();
    }
    this.preferredCompletion.add(preferredCompletionItem);
    return this;
  }

  /**
   * The preferred completion message for the output.
   * @return preferredCompletion
   */
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_PREFERRED_COMPLETION)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public List<FineTunePreferenceRequestInputPreferredCompletionInner> getPreferredCompletion() {
    return preferredCompletion;
  }


  @JsonProperty(JSON_PROPERTY_PREFERRED_COMPLETION)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setPreferredCompletion(@javax.annotation.Nullable List<FineTunePreferenceRequestInputPreferredCompletionInner> preferredCompletion) {
    this.preferredCompletion = preferredCompletion;
  }

  public FineTunePreferenceRequestInput nonPreferredCompletion(@javax.annotation.Nullable List<FineTunePreferenceRequestInputPreferredCompletionInner> nonPreferredCompletion) {
    
    this.nonPreferredCompletion = nonPreferredCompletion;
    return this;
  }

  public FineTunePreferenceRequestInput addNonPreferredCompletionItem(FineTunePreferenceRequestInputPreferredCompletionInner nonPreferredCompletionItem) {
    if (this.nonPreferredCompletion == null) {
      this.nonPreferredCompletion = new ArrayList<>();
    }
    this.nonPreferredCompletion.add(nonPreferredCompletionItem);
    return this;
  }

  /**
   * The non-preferred completion message for the output.
   * @return nonPreferredCompletion
   */
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_NON_PREFERRED_COMPLETION)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public List<FineTunePreferenceRequestInputPreferredCompletionInner> getNonPreferredCompletion() {
    return nonPreferredCompletion;
  }


  @JsonProperty(JSON_PROPERTY_NON_PREFERRED_COMPLETION)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setNonPreferredCompletion(@javax.annotation.Nullable List<FineTunePreferenceRequestInputPreferredCompletionInner> nonPreferredCompletion) {
    this.nonPreferredCompletion = nonPreferredCompletion;
  }

  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    FineTunePreferenceRequestInput fineTunePreferenceRequestInput = (FineTunePreferenceRequestInput) o;
    return Objects.equals(this.input, fineTunePreferenceRequestInput.input) &&
        Objects.equals(this.preferredCompletion, fineTunePreferenceRequestInput.preferredCompletion) &&
        Objects.equals(this.nonPreferredCompletion, fineTunePreferenceRequestInput.nonPreferredCompletion);
  }

  @Override
  public int hashCode() {
    return Objects.hash(input, preferredCompletion, nonPreferredCompletion);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class FineTunePreferenceRequestInput {\n");
    sb.append("    input: ").append(toIndentedString(input)).append("\n");
    sb.append("    preferredCompletion: ").append(toIndentedString(preferredCompletion)).append("\n");
    sb.append("    nonPreferredCompletion: ").append(toIndentedString(nonPreferredCompletion)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

  /**
   * Convert the instance into URL query string.
   *
   * @return URL query string
   */
  public String toUrlQueryString() {
    return toUrlQueryString(null);
  }

  /**
   * Convert the instance into URL query string.
   *
   * @param prefix prefix of the query string
   * @return URL query string
   */
  public String toUrlQueryString(String prefix) {
    String suffix = "";
    String containerSuffix = "";
    String containerPrefix = "";
    if (prefix == null) {
      // style=form, explode=true, e.g. /pet?name=cat&type=manx
      prefix = "";
    } else {
      // deepObject style e.g. /pet?id[name]=cat&id[type]=manx
      prefix = prefix + "[";
      suffix = "]";
      containerSuffix = "]";
      containerPrefix = "[";
    }

    StringJoiner joiner = new StringJoiner("&");

    // add `input` to the URL query string
    if (getInput() != null) {
      joiner.add(getInput().toUrlQueryString(prefix + "input" + suffix));
    }

    // add `preferred_completion` to the URL query string
    if (getPreferredCompletion() != null) {
      for (int i = 0; i < getPreferredCompletion().size(); i++) {
        if (getPreferredCompletion().get(i) != null) {
          joiner.add(getPreferredCompletion().get(i).toUrlQueryString(String.format("%spreferred_completion%s%s", prefix, suffix,
              "".equals(suffix) ? "" : String.format("%s%d%s", containerPrefix, i, containerSuffix))));
        }
      }
    }

    // add `non_preferred_completion` to the URL query string
    if (getNonPreferredCompletion() != null) {
      for (int i = 0; i < getNonPreferredCompletion().size(); i++) {
        if (getNonPreferredCompletion().get(i) != null) {
          joiner.add(getNonPreferredCompletion().get(i).toUrlQueryString(String.format("%snon_preferred_completion%s%s", prefix, suffix,
              "".equals(suffix) ? "" : String.format("%s%d%s", containerPrefix, i, containerSuffix))));
        }
      }
    }

    return joiner.toString();
  }

}

