/*
 * OpenAI API
 * The OpenAI REST API. Please see https://platform.openai.com/docs/api-reference for more details.
 *
 * The version of the OpenAPI document: 2.3.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.model;

import java.util.Objects;
import java.util.Arrays;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonTypeName;
import com.fasterxml.jackson.annotation.JsonValue;
import org.openapitools.client.model.CreateModerationResponseResultsInnerCategories;
import org.openapitools.client.model.CreateModerationResponseResultsInnerCategoryAppliedInputTypes;
import org.openapitools.client.model.CreateModerationResponseResultsInnerCategoryScores;
import com.fasterxml.jackson.annotation.JsonPropertyOrder;
import com.fasterxml.jackson.annotation.JsonTypeName;
import java.io.UnsupportedEncodingException;
import java.net.URLEncoder;
import java.util.StringJoiner;

/**
 * CreateModerationResponseResultsInner
 */
@JsonPropertyOrder({
  CreateModerationResponseResultsInner.JSON_PROPERTY_FLAGGED,
  CreateModerationResponseResultsInner.JSON_PROPERTY_CATEGORIES,
  CreateModerationResponseResultsInner.JSON_PROPERTY_CATEGORY_SCORES,
  CreateModerationResponseResultsInner.JSON_PROPERTY_CATEGORY_APPLIED_INPUT_TYPES
})
@JsonTypeName("CreateModerationResponse_results_inner")
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2025-01-14T12:15:51.997600814-05:00[US/Eastern]", comments = "Generator version: 7.10.0")
public class CreateModerationResponseResultsInner {
  public static final String JSON_PROPERTY_FLAGGED = "flagged";
  @javax.annotation.Nonnull
  private Boolean flagged;

  public static final String JSON_PROPERTY_CATEGORIES = "categories";
  @javax.annotation.Nonnull
  private CreateModerationResponseResultsInnerCategories categories;

  public static final String JSON_PROPERTY_CATEGORY_SCORES = "category_scores";
  @javax.annotation.Nonnull
  private CreateModerationResponseResultsInnerCategoryScores categoryScores;

  public static final String JSON_PROPERTY_CATEGORY_APPLIED_INPUT_TYPES = "category_applied_input_types";
  @javax.annotation.Nonnull
  private CreateModerationResponseResultsInnerCategoryAppliedInputTypes categoryAppliedInputTypes;

  public CreateModerationResponseResultsInner() {
  }

  public CreateModerationResponseResultsInner flagged(@javax.annotation.Nonnull Boolean flagged) {
    
    this.flagged = flagged;
    return this;
  }

  /**
   * Whether any of the below categories are flagged.
   * @return flagged
   */
  @javax.annotation.Nonnull
  @JsonProperty(JSON_PROPERTY_FLAGGED)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public Boolean getFlagged() {
    return flagged;
  }


  @JsonProperty(JSON_PROPERTY_FLAGGED)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setFlagged(@javax.annotation.Nonnull Boolean flagged) {
    this.flagged = flagged;
  }

  public CreateModerationResponseResultsInner categories(@javax.annotation.Nonnull CreateModerationResponseResultsInnerCategories categories) {
    
    this.categories = categories;
    return this;
  }

  /**
   * Get categories
   * @return categories
   */
  @javax.annotation.Nonnull
  @JsonProperty(JSON_PROPERTY_CATEGORIES)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public CreateModerationResponseResultsInnerCategories getCategories() {
    return categories;
  }


  @JsonProperty(JSON_PROPERTY_CATEGORIES)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setCategories(@javax.annotation.Nonnull CreateModerationResponseResultsInnerCategories categories) {
    this.categories = categories;
  }

  public CreateModerationResponseResultsInner categoryScores(@javax.annotation.Nonnull CreateModerationResponseResultsInnerCategoryScores categoryScores) {
    
    this.categoryScores = categoryScores;
    return this;
  }

  /**
   * Get categoryScores
   * @return categoryScores
   */
  @javax.annotation.Nonnull
  @JsonProperty(JSON_PROPERTY_CATEGORY_SCORES)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public CreateModerationResponseResultsInnerCategoryScores getCategoryScores() {
    return categoryScores;
  }


  @JsonProperty(JSON_PROPERTY_CATEGORY_SCORES)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setCategoryScores(@javax.annotation.Nonnull CreateModerationResponseResultsInnerCategoryScores categoryScores) {
    this.categoryScores = categoryScores;
  }

  public CreateModerationResponseResultsInner categoryAppliedInputTypes(@javax.annotation.Nonnull CreateModerationResponseResultsInnerCategoryAppliedInputTypes categoryAppliedInputTypes) {
    
    this.categoryAppliedInputTypes = categoryAppliedInputTypes;
    return this;
  }

  /**
   * Get categoryAppliedInputTypes
   * @return categoryAppliedInputTypes
   */
  @javax.annotation.Nonnull
  @JsonProperty(JSON_PROPERTY_CATEGORY_APPLIED_INPUT_TYPES)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public CreateModerationResponseResultsInnerCategoryAppliedInputTypes getCategoryAppliedInputTypes() {
    return categoryAppliedInputTypes;
  }


  @JsonProperty(JSON_PROPERTY_CATEGORY_APPLIED_INPUT_TYPES)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setCategoryAppliedInputTypes(@javax.annotation.Nonnull CreateModerationResponseResultsInnerCategoryAppliedInputTypes categoryAppliedInputTypes) {
    this.categoryAppliedInputTypes = categoryAppliedInputTypes;
  }

  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    CreateModerationResponseResultsInner createModerationResponseResultsInner = (CreateModerationResponseResultsInner) o;
    return Objects.equals(this.flagged, createModerationResponseResultsInner.flagged) &&
        Objects.equals(this.categories, createModerationResponseResultsInner.categories) &&
        Objects.equals(this.categoryScores, createModerationResponseResultsInner.categoryScores) &&
        Objects.equals(this.categoryAppliedInputTypes, createModerationResponseResultsInner.categoryAppliedInputTypes);
  }

  @Override
  public int hashCode() {
    return Objects.hash(flagged, categories, categoryScores, categoryAppliedInputTypes);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class CreateModerationResponseResultsInner {\n");
    sb.append("    flagged: ").append(toIndentedString(flagged)).append("\n");
    sb.append("    categories: ").append(toIndentedString(categories)).append("\n");
    sb.append("    categoryScores: ").append(toIndentedString(categoryScores)).append("\n");
    sb.append("    categoryAppliedInputTypes: ").append(toIndentedString(categoryAppliedInputTypes)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

  /**
   * Convert the instance into URL query string.
   *
   * @return URL query string
   */
  public String toUrlQueryString() {
    return toUrlQueryString(null);
  }

  /**
   * Convert the instance into URL query string.
   *
   * @param prefix prefix of the query string
   * @return URL query string
   */
  public String toUrlQueryString(String prefix) {
    String suffix = "";
    String containerSuffix = "";
    String containerPrefix = "";
    if (prefix == null) {
      // style=form, explode=true, e.g. /pet?name=cat&type=manx
      prefix = "";
    } else {
      // deepObject style e.g. /pet?id[name]=cat&id[type]=manx
      prefix = prefix + "[";
      suffix = "]";
      containerSuffix = "]";
      containerPrefix = "[";
    }

    StringJoiner joiner = new StringJoiner("&");

    // add `flagged` to the URL query string
    if (getFlagged() != null) {
      try {
        joiner.add(String.format("%sflagged%s=%s", prefix, suffix, URLEncoder.encode(String.valueOf(getFlagged()), "UTF-8").replaceAll("\\+", "%20")));
      } catch (UnsupportedEncodingException e) {
        // Should never happen, UTF-8 is always supported
        throw new RuntimeException(e);
      }
    }

    // add `categories` to the URL query string
    if (getCategories() != null) {
      joiner.add(getCategories().toUrlQueryString(prefix + "categories" + suffix));
    }

    // add `category_scores` to the URL query string
    if (getCategoryScores() != null) {
      joiner.add(getCategoryScores().toUrlQueryString(prefix + "category_scores" + suffix));
    }

    // add `category_applied_input_types` to the URL query string
    if (getCategoryAppliedInputTypes() != null) {
      joiner.add(getCategoryAppliedInputTypes().toUrlQueryString(prefix + "category_applied_input_types" + suffix));
    }

    return joiner.toString();
  }

}

