/*
 * OpenAI API
 * The OpenAI REST API. Please see https://platform.openai.com/docs/api-reference for more details.
 *
 * The version of the OpenAPI document: 2.3.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.model;

import java.util.Objects;
import java.util.Arrays;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonTypeName;
import com.fasterxml.jackson.annotation.JsonValue;
import org.openapitools.client.model.FineTuningJobCheckpointMetrics;
import com.fasterxml.jackson.annotation.JsonPropertyOrder;
import com.fasterxml.jackson.annotation.JsonTypeName;
import java.io.UnsupportedEncodingException;
import java.net.URLEncoder;
import java.util.StringJoiner;

/**
 * The &#x60;fine_tuning.job.checkpoint&#x60; object represents a model checkpoint for a fine-tuning job that is ready to use. 
 */
@JsonPropertyOrder({
  FineTuningJobCheckpoint.JSON_PROPERTY_ID,
  FineTuningJobCheckpoint.JSON_PROPERTY_CREATED_AT,
  FineTuningJobCheckpoint.JSON_PROPERTY_FINE_TUNED_MODEL_CHECKPOINT,
  FineTuningJobCheckpoint.JSON_PROPERTY_STEP_NUMBER,
  FineTuningJobCheckpoint.JSON_PROPERTY_METRICS,
  FineTuningJobCheckpoint.JSON_PROPERTY_FINE_TUNING_JOB_ID,
  FineTuningJobCheckpoint.JSON_PROPERTY_OBJECT
})
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2025-01-14T12:15:51.997600814-05:00[US/Eastern]", comments = "Generator version: 7.10.0")
public class FineTuningJobCheckpoint {
  public static final String JSON_PROPERTY_ID = "id";
  @javax.annotation.Nonnull
  private String id;

  public static final String JSON_PROPERTY_CREATED_AT = "created_at";
  @javax.annotation.Nonnull
  private Integer createdAt;

  public static final String JSON_PROPERTY_FINE_TUNED_MODEL_CHECKPOINT = "fine_tuned_model_checkpoint";
  @javax.annotation.Nonnull
  private String fineTunedModelCheckpoint;

  public static final String JSON_PROPERTY_STEP_NUMBER = "step_number";
  @javax.annotation.Nonnull
  private Integer stepNumber;

  public static final String JSON_PROPERTY_METRICS = "metrics";
  @javax.annotation.Nonnull
  private FineTuningJobCheckpointMetrics metrics;

  public static final String JSON_PROPERTY_FINE_TUNING_JOB_ID = "fine_tuning_job_id";
  @javax.annotation.Nonnull
  private String fineTuningJobId;

  /**
   * The object type, which is always \&quot;fine_tuning.job.checkpoint\&quot;.
   */
  public enum ObjectEnum {
    FINE_TUNING_JOB_CHECKPOINT(String.valueOf("fine_tuning.job.checkpoint"));

    private String value;

    ObjectEnum(String value) {
      this.value = value;
    }

    @JsonValue
    public String getValue() {
      return value;
    }

    @Override
    public String toString() {
      return String.valueOf(value);
    }

    @JsonCreator
    public static ObjectEnum fromValue(String value) {
      for (ObjectEnum b : ObjectEnum.values()) {
        if (b.value.equals(value)) {
          return b;
        }
      }
      throw new IllegalArgumentException("Unexpected value '" + value + "'");
    }
  }

  public static final String JSON_PROPERTY_OBJECT = "object";
  @javax.annotation.Nonnull
  private ObjectEnum _object;

  public FineTuningJobCheckpoint() {
  }

  public FineTuningJobCheckpoint id(@javax.annotation.Nonnull String id) {
    
    this.id = id;
    return this;
  }

  /**
   * The checkpoint identifier, which can be referenced in the API endpoints.
   * @return id
   */
  @javax.annotation.Nonnull
  @JsonProperty(JSON_PROPERTY_ID)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public String getId() {
    return id;
  }


  @JsonProperty(JSON_PROPERTY_ID)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setId(@javax.annotation.Nonnull String id) {
    this.id = id;
  }

  public FineTuningJobCheckpoint createdAt(@javax.annotation.Nonnull Integer createdAt) {
    
    this.createdAt = createdAt;
    return this;
  }

  /**
   * The Unix timestamp (in seconds) for when the checkpoint was created.
   * @return createdAt
   */
  @javax.annotation.Nonnull
  @JsonProperty(JSON_PROPERTY_CREATED_AT)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public Integer getCreatedAt() {
    return createdAt;
  }


  @JsonProperty(JSON_PROPERTY_CREATED_AT)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setCreatedAt(@javax.annotation.Nonnull Integer createdAt) {
    this.createdAt = createdAt;
  }

  public FineTuningJobCheckpoint fineTunedModelCheckpoint(@javax.annotation.Nonnull String fineTunedModelCheckpoint) {
    
    this.fineTunedModelCheckpoint = fineTunedModelCheckpoint;
    return this;
  }

  /**
   * The name of the fine-tuned checkpoint model that is created.
   * @return fineTunedModelCheckpoint
   */
  @javax.annotation.Nonnull
  @JsonProperty(JSON_PROPERTY_FINE_TUNED_MODEL_CHECKPOINT)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public String getFineTunedModelCheckpoint() {
    return fineTunedModelCheckpoint;
  }


  @JsonProperty(JSON_PROPERTY_FINE_TUNED_MODEL_CHECKPOINT)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setFineTunedModelCheckpoint(@javax.annotation.Nonnull String fineTunedModelCheckpoint) {
    this.fineTunedModelCheckpoint = fineTunedModelCheckpoint;
  }

  public FineTuningJobCheckpoint stepNumber(@javax.annotation.Nonnull Integer stepNumber) {
    
    this.stepNumber = stepNumber;
    return this;
  }

  /**
   * The step number that the checkpoint was created at.
   * @return stepNumber
   */
  @javax.annotation.Nonnull
  @JsonProperty(JSON_PROPERTY_STEP_NUMBER)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public Integer getStepNumber() {
    return stepNumber;
  }


  @JsonProperty(JSON_PROPERTY_STEP_NUMBER)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setStepNumber(@javax.annotation.Nonnull Integer stepNumber) {
    this.stepNumber = stepNumber;
  }

  public FineTuningJobCheckpoint metrics(@javax.annotation.Nonnull FineTuningJobCheckpointMetrics metrics) {
    
    this.metrics = metrics;
    return this;
  }

  /**
   * Get metrics
   * @return metrics
   */
  @javax.annotation.Nonnull
  @JsonProperty(JSON_PROPERTY_METRICS)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public FineTuningJobCheckpointMetrics getMetrics() {
    return metrics;
  }


  @JsonProperty(JSON_PROPERTY_METRICS)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setMetrics(@javax.annotation.Nonnull FineTuningJobCheckpointMetrics metrics) {
    this.metrics = metrics;
  }

  public FineTuningJobCheckpoint fineTuningJobId(@javax.annotation.Nonnull String fineTuningJobId) {
    
    this.fineTuningJobId = fineTuningJobId;
    return this;
  }

  /**
   * The name of the fine-tuning job that this checkpoint was created from.
   * @return fineTuningJobId
   */
  @javax.annotation.Nonnull
  @JsonProperty(JSON_PROPERTY_FINE_TUNING_JOB_ID)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public String getFineTuningJobId() {
    return fineTuningJobId;
  }


  @JsonProperty(JSON_PROPERTY_FINE_TUNING_JOB_ID)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setFineTuningJobId(@javax.annotation.Nonnull String fineTuningJobId) {
    this.fineTuningJobId = fineTuningJobId;
  }

  public FineTuningJobCheckpoint _object(@javax.annotation.Nonnull ObjectEnum _object) {
    
    this._object = _object;
    return this;
  }

  /**
   * The object type, which is always \&quot;fine_tuning.job.checkpoint\&quot;.
   * @return _object
   */
  @javax.annotation.Nonnull
  @JsonProperty(JSON_PROPERTY_OBJECT)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public ObjectEnum getObject() {
    return _object;
  }


  @JsonProperty(JSON_PROPERTY_OBJECT)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setObject(@javax.annotation.Nonnull ObjectEnum _object) {
    this._object = _object;
  }

  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    FineTuningJobCheckpoint fineTuningJobCheckpoint = (FineTuningJobCheckpoint) o;
    return Objects.equals(this.id, fineTuningJobCheckpoint.id) &&
        Objects.equals(this.createdAt, fineTuningJobCheckpoint.createdAt) &&
        Objects.equals(this.fineTunedModelCheckpoint, fineTuningJobCheckpoint.fineTunedModelCheckpoint) &&
        Objects.equals(this.stepNumber, fineTuningJobCheckpoint.stepNumber) &&
        Objects.equals(this.metrics, fineTuningJobCheckpoint.metrics) &&
        Objects.equals(this.fineTuningJobId, fineTuningJobCheckpoint.fineTuningJobId) &&
        Objects.equals(this._object, fineTuningJobCheckpoint._object);
  }

  @Override
  public int hashCode() {
    return Objects.hash(id, createdAt, fineTunedModelCheckpoint, stepNumber, metrics, fineTuningJobId, _object);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class FineTuningJobCheckpoint {\n");
    sb.append("    id: ").append(toIndentedString(id)).append("\n");
    sb.append("    createdAt: ").append(toIndentedString(createdAt)).append("\n");
    sb.append("    fineTunedModelCheckpoint: ").append(toIndentedString(fineTunedModelCheckpoint)).append("\n");
    sb.append("    stepNumber: ").append(toIndentedString(stepNumber)).append("\n");
    sb.append("    metrics: ").append(toIndentedString(metrics)).append("\n");
    sb.append("    fineTuningJobId: ").append(toIndentedString(fineTuningJobId)).append("\n");
    sb.append("    _object: ").append(toIndentedString(_object)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

  /**
   * Convert the instance into URL query string.
   *
   * @return URL query string
   */
  public String toUrlQueryString() {
    return toUrlQueryString(null);
  }

  /**
   * Convert the instance into URL query string.
   *
   * @param prefix prefix of the query string
   * @return URL query string
   */
  public String toUrlQueryString(String prefix) {
    String suffix = "";
    String containerSuffix = "";
    String containerPrefix = "";
    if (prefix == null) {
      // style=form, explode=true, e.g. /pet?name=cat&type=manx
      prefix = "";
    } else {
      // deepObject style e.g. /pet?id[name]=cat&id[type]=manx
      prefix = prefix + "[";
      suffix = "]";
      containerSuffix = "]";
      containerPrefix = "[";
    }

    StringJoiner joiner = new StringJoiner("&");

    // add `id` to the URL query string
    if (getId() != null) {
      try {
        joiner.add(String.format("%sid%s=%s", prefix, suffix, URLEncoder.encode(String.valueOf(getId()), "UTF-8").replaceAll("\\+", "%20")));
      } catch (UnsupportedEncodingException e) {
        // Should never happen, UTF-8 is always supported
        throw new RuntimeException(e);
      }
    }

    // add `created_at` to the URL query string
    if (getCreatedAt() != null) {
      try {
        joiner.add(String.format("%screated_at%s=%s", prefix, suffix, URLEncoder.encode(String.valueOf(getCreatedAt()), "UTF-8").replaceAll("\\+", "%20")));
      } catch (UnsupportedEncodingException e) {
        // Should never happen, UTF-8 is always supported
        throw new RuntimeException(e);
      }
    }

    // add `fine_tuned_model_checkpoint` to the URL query string
    if (getFineTunedModelCheckpoint() != null) {
      try {
        joiner.add(String.format("%sfine_tuned_model_checkpoint%s=%s", prefix, suffix, URLEncoder.encode(String.valueOf(getFineTunedModelCheckpoint()), "UTF-8").replaceAll("\\+", "%20")));
      } catch (UnsupportedEncodingException e) {
        // Should never happen, UTF-8 is always supported
        throw new RuntimeException(e);
      }
    }

    // add `step_number` to the URL query string
    if (getStepNumber() != null) {
      try {
        joiner.add(String.format("%sstep_number%s=%s", prefix, suffix, URLEncoder.encode(String.valueOf(getStepNumber()), "UTF-8").replaceAll("\\+", "%20")));
      } catch (UnsupportedEncodingException e) {
        // Should never happen, UTF-8 is always supported
        throw new RuntimeException(e);
      }
    }

    // add `metrics` to the URL query string
    if (getMetrics() != null) {
      joiner.add(getMetrics().toUrlQueryString(prefix + "metrics" + suffix));
    }

    // add `fine_tuning_job_id` to the URL query string
    if (getFineTuningJobId() != null) {
      try {
        joiner.add(String.format("%sfine_tuning_job_id%s=%s", prefix, suffix, URLEncoder.encode(String.valueOf(getFineTuningJobId()), "UTF-8").replaceAll("\\+", "%20")));
      } catch (UnsupportedEncodingException e) {
        // Should never happen, UTF-8 is always supported
        throw new RuntimeException(e);
      }
    }

    // add `object` to the URL query string
    if (getObject() != null) {
      try {
        joiner.add(String.format("%sobject%s=%s", prefix, suffix, URLEncoder.encode(String.valueOf(getObject()), "UTF-8").replaceAll("\\+", "%20")));
      } catch (UnsupportedEncodingException e) {
        // Should never happen, UTF-8 is always supported
        throw new RuntimeException(e);
      }
    }

    return joiner.toString();
  }

}

