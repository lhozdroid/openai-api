/*
 * OpenAI API
 * The OpenAI REST API. Please see https://platform.openai.com/docs/api-reference for more details.
 *
 * The version of the OpenAPI document: 2.3.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.model;

import java.util.Objects;
import java.util.Arrays;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonTypeName;
import com.fasterxml.jackson.annotation.JsonValue;
import java.math.BigDecimal;
import com.fasterxml.jackson.annotation.JsonPropertyOrder;
import com.fasterxml.jackson.annotation.JsonTypeName;
import java.io.UnsupportedEncodingException;
import java.net.URLEncoder;
import java.util.StringJoiner;

/**
 * Metrics at the step number during the fine-tuning job.
 */
@JsonPropertyOrder({
  FineTuningJobCheckpointMetrics.JSON_PROPERTY_STEP,
  FineTuningJobCheckpointMetrics.JSON_PROPERTY_TRAIN_LOSS,
  FineTuningJobCheckpointMetrics.JSON_PROPERTY_TRAIN_MEAN_TOKEN_ACCURACY,
  FineTuningJobCheckpointMetrics.JSON_PROPERTY_VALID_LOSS,
  FineTuningJobCheckpointMetrics.JSON_PROPERTY_VALID_MEAN_TOKEN_ACCURACY,
  FineTuningJobCheckpointMetrics.JSON_PROPERTY_FULL_VALID_LOSS,
  FineTuningJobCheckpointMetrics.JSON_PROPERTY_FULL_VALID_MEAN_TOKEN_ACCURACY
})
@JsonTypeName("FineTuningJobCheckpoint_metrics")
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2025-02-28T09:51:07.087747877-05:00[US/Eastern]", comments = "Generator version: 7.11.0")
public class FineTuningJobCheckpointMetrics {
  public static final String JSON_PROPERTY_STEP = "step";
  @javax.annotation.Nullable
  private BigDecimal step;

  public static final String JSON_PROPERTY_TRAIN_LOSS = "train_loss";
  @javax.annotation.Nullable
  private BigDecimal trainLoss;

  public static final String JSON_PROPERTY_TRAIN_MEAN_TOKEN_ACCURACY = "train_mean_token_accuracy";
  @javax.annotation.Nullable
  private BigDecimal trainMeanTokenAccuracy;

  public static final String JSON_PROPERTY_VALID_LOSS = "valid_loss";
  @javax.annotation.Nullable
  private BigDecimal validLoss;

  public static final String JSON_PROPERTY_VALID_MEAN_TOKEN_ACCURACY = "valid_mean_token_accuracy";
  @javax.annotation.Nullable
  private BigDecimal validMeanTokenAccuracy;

  public static final String JSON_PROPERTY_FULL_VALID_LOSS = "full_valid_loss";
  @javax.annotation.Nullable
  private BigDecimal fullValidLoss;

  public static final String JSON_PROPERTY_FULL_VALID_MEAN_TOKEN_ACCURACY = "full_valid_mean_token_accuracy";
  @javax.annotation.Nullable
  private BigDecimal fullValidMeanTokenAccuracy;

  public FineTuningJobCheckpointMetrics() {
  }

  public FineTuningJobCheckpointMetrics step(@javax.annotation.Nullable BigDecimal step) {
    
    this.step = step;
    return this;
  }

  /**
   * Get step
   * @return step
   */
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_STEP)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public BigDecimal getStep() {
    return step;
  }


  @JsonProperty(JSON_PROPERTY_STEP)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setStep(@javax.annotation.Nullable BigDecimal step) {
    this.step = step;
  }

  public FineTuningJobCheckpointMetrics trainLoss(@javax.annotation.Nullable BigDecimal trainLoss) {
    
    this.trainLoss = trainLoss;
    return this;
  }

  /**
   * Get trainLoss
   * @return trainLoss
   */
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_TRAIN_LOSS)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public BigDecimal getTrainLoss() {
    return trainLoss;
  }


  @JsonProperty(JSON_PROPERTY_TRAIN_LOSS)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setTrainLoss(@javax.annotation.Nullable BigDecimal trainLoss) {
    this.trainLoss = trainLoss;
  }

  public FineTuningJobCheckpointMetrics trainMeanTokenAccuracy(@javax.annotation.Nullable BigDecimal trainMeanTokenAccuracy) {
    
    this.trainMeanTokenAccuracy = trainMeanTokenAccuracy;
    return this;
  }

  /**
   * Get trainMeanTokenAccuracy
   * @return trainMeanTokenAccuracy
   */
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_TRAIN_MEAN_TOKEN_ACCURACY)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public BigDecimal getTrainMeanTokenAccuracy() {
    return trainMeanTokenAccuracy;
  }


  @JsonProperty(JSON_PROPERTY_TRAIN_MEAN_TOKEN_ACCURACY)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setTrainMeanTokenAccuracy(@javax.annotation.Nullable BigDecimal trainMeanTokenAccuracy) {
    this.trainMeanTokenAccuracy = trainMeanTokenAccuracy;
  }

  public FineTuningJobCheckpointMetrics validLoss(@javax.annotation.Nullable BigDecimal validLoss) {
    
    this.validLoss = validLoss;
    return this;
  }

  /**
   * Get validLoss
   * @return validLoss
   */
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_VALID_LOSS)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public BigDecimal getValidLoss() {
    return validLoss;
  }


  @JsonProperty(JSON_PROPERTY_VALID_LOSS)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setValidLoss(@javax.annotation.Nullable BigDecimal validLoss) {
    this.validLoss = validLoss;
  }

  public FineTuningJobCheckpointMetrics validMeanTokenAccuracy(@javax.annotation.Nullable BigDecimal validMeanTokenAccuracy) {
    
    this.validMeanTokenAccuracy = validMeanTokenAccuracy;
    return this;
  }

  /**
   * Get validMeanTokenAccuracy
   * @return validMeanTokenAccuracy
   */
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_VALID_MEAN_TOKEN_ACCURACY)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public BigDecimal getValidMeanTokenAccuracy() {
    return validMeanTokenAccuracy;
  }


  @JsonProperty(JSON_PROPERTY_VALID_MEAN_TOKEN_ACCURACY)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setValidMeanTokenAccuracy(@javax.annotation.Nullable BigDecimal validMeanTokenAccuracy) {
    this.validMeanTokenAccuracy = validMeanTokenAccuracy;
  }

  public FineTuningJobCheckpointMetrics fullValidLoss(@javax.annotation.Nullable BigDecimal fullValidLoss) {
    
    this.fullValidLoss = fullValidLoss;
    return this;
  }

  /**
   * Get fullValidLoss
   * @return fullValidLoss
   */
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_FULL_VALID_LOSS)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public BigDecimal getFullValidLoss() {
    return fullValidLoss;
  }


  @JsonProperty(JSON_PROPERTY_FULL_VALID_LOSS)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setFullValidLoss(@javax.annotation.Nullable BigDecimal fullValidLoss) {
    this.fullValidLoss = fullValidLoss;
  }

  public FineTuningJobCheckpointMetrics fullValidMeanTokenAccuracy(@javax.annotation.Nullable BigDecimal fullValidMeanTokenAccuracy) {
    
    this.fullValidMeanTokenAccuracy = fullValidMeanTokenAccuracy;
    return this;
  }

  /**
   * Get fullValidMeanTokenAccuracy
   * @return fullValidMeanTokenAccuracy
   */
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_FULL_VALID_MEAN_TOKEN_ACCURACY)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public BigDecimal getFullValidMeanTokenAccuracy() {
    return fullValidMeanTokenAccuracy;
  }


  @JsonProperty(JSON_PROPERTY_FULL_VALID_MEAN_TOKEN_ACCURACY)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setFullValidMeanTokenAccuracy(@javax.annotation.Nullable BigDecimal fullValidMeanTokenAccuracy) {
    this.fullValidMeanTokenAccuracy = fullValidMeanTokenAccuracy;
  }

  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    FineTuningJobCheckpointMetrics fineTuningJobCheckpointMetrics = (FineTuningJobCheckpointMetrics) o;
    return Objects.equals(this.step, fineTuningJobCheckpointMetrics.step) &&
        Objects.equals(this.trainLoss, fineTuningJobCheckpointMetrics.trainLoss) &&
        Objects.equals(this.trainMeanTokenAccuracy, fineTuningJobCheckpointMetrics.trainMeanTokenAccuracy) &&
        Objects.equals(this.validLoss, fineTuningJobCheckpointMetrics.validLoss) &&
        Objects.equals(this.validMeanTokenAccuracy, fineTuningJobCheckpointMetrics.validMeanTokenAccuracy) &&
        Objects.equals(this.fullValidLoss, fineTuningJobCheckpointMetrics.fullValidLoss) &&
        Objects.equals(this.fullValidMeanTokenAccuracy, fineTuningJobCheckpointMetrics.fullValidMeanTokenAccuracy);
  }

  @Override
  public int hashCode() {
    return Objects.hash(step, trainLoss, trainMeanTokenAccuracy, validLoss, validMeanTokenAccuracy, fullValidLoss, fullValidMeanTokenAccuracy);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class FineTuningJobCheckpointMetrics {\n");
    sb.append("    step: ").append(toIndentedString(step)).append("\n");
    sb.append("    trainLoss: ").append(toIndentedString(trainLoss)).append("\n");
    sb.append("    trainMeanTokenAccuracy: ").append(toIndentedString(trainMeanTokenAccuracy)).append("\n");
    sb.append("    validLoss: ").append(toIndentedString(validLoss)).append("\n");
    sb.append("    validMeanTokenAccuracy: ").append(toIndentedString(validMeanTokenAccuracy)).append("\n");
    sb.append("    fullValidLoss: ").append(toIndentedString(fullValidLoss)).append("\n");
    sb.append("    fullValidMeanTokenAccuracy: ").append(toIndentedString(fullValidMeanTokenAccuracy)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

  /**
   * Convert the instance into URL query string.
   *
   * @return URL query string
   */
  public String toUrlQueryString() {
    return toUrlQueryString(null);
  }

  /**
   * Convert the instance into URL query string.
   *
   * @param prefix prefix of the query string
   * @return URL query string
   */
  public String toUrlQueryString(String prefix) {
    String suffix = "";
    String containerSuffix = "";
    String containerPrefix = "";
    if (prefix == null) {
      // style=form, explode=true, e.g. /pet?name=cat&type=manx
      prefix = "";
    } else {
      // deepObject style e.g. /pet?id[name]=cat&id[type]=manx
      prefix = prefix + "[";
      suffix = "]";
      containerSuffix = "]";
      containerPrefix = "[";
    }

    StringJoiner joiner = new StringJoiner("&");

    // add `step` to the URL query string
    if (getStep() != null) {
      try {
        joiner.add(String.format("%sstep%s=%s", prefix, suffix, URLEncoder.encode(String.valueOf(getStep()), "UTF-8").replaceAll("\\+", "%20")));
      } catch (UnsupportedEncodingException e) {
        // Should never happen, UTF-8 is always supported
        throw new RuntimeException(e);
      }
    }

    // add `train_loss` to the URL query string
    if (getTrainLoss() != null) {
      try {
        joiner.add(String.format("%strain_loss%s=%s", prefix, suffix, URLEncoder.encode(String.valueOf(getTrainLoss()), "UTF-8").replaceAll("\\+", "%20")));
      } catch (UnsupportedEncodingException e) {
        // Should never happen, UTF-8 is always supported
        throw new RuntimeException(e);
      }
    }

    // add `train_mean_token_accuracy` to the URL query string
    if (getTrainMeanTokenAccuracy() != null) {
      try {
        joiner.add(String.format("%strain_mean_token_accuracy%s=%s", prefix, suffix, URLEncoder.encode(String.valueOf(getTrainMeanTokenAccuracy()), "UTF-8").replaceAll("\\+", "%20")));
      } catch (UnsupportedEncodingException e) {
        // Should never happen, UTF-8 is always supported
        throw new RuntimeException(e);
      }
    }

    // add `valid_loss` to the URL query string
    if (getValidLoss() != null) {
      try {
        joiner.add(String.format("%svalid_loss%s=%s", prefix, suffix, URLEncoder.encode(String.valueOf(getValidLoss()), "UTF-8").replaceAll("\\+", "%20")));
      } catch (UnsupportedEncodingException e) {
        // Should never happen, UTF-8 is always supported
        throw new RuntimeException(e);
      }
    }

    // add `valid_mean_token_accuracy` to the URL query string
    if (getValidMeanTokenAccuracy() != null) {
      try {
        joiner.add(String.format("%svalid_mean_token_accuracy%s=%s", prefix, suffix, URLEncoder.encode(String.valueOf(getValidMeanTokenAccuracy()), "UTF-8").replaceAll("\\+", "%20")));
      } catch (UnsupportedEncodingException e) {
        // Should never happen, UTF-8 is always supported
        throw new RuntimeException(e);
      }
    }

    // add `full_valid_loss` to the URL query string
    if (getFullValidLoss() != null) {
      try {
        joiner.add(String.format("%sfull_valid_loss%s=%s", prefix, suffix, URLEncoder.encode(String.valueOf(getFullValidLoss()), "UTF-8").replaceAll("\\+", "%20")));
      } catch (UnsupportedEncodingException e) {
        // Should never happen, UTF-8 is always supported
        throw new RuntimeException(e);
      }
    }

    // add `full_valid_mean_token_accuracy` to the URL query string
    if (getFullValidMeanTokenAccuracy() != null) {
      try {
        joiner.add(String.format("%sfull_valid_mean_token_accuracy%s=%s", prefix, suffix, URLEncoder.encode(String.valueOf(getFullValidMeanTokenAccuracy()), "UTF-8").replaceAll("\\+", "%20")));
      } catch (UnsupportedEncodingException e) {
        // Should never happen, UTF-8 is always supported
        throw new RuntimeException(e);
      }
    }

    return joiner.toString();
  }

}

