/*
 * OpenAI API
 * The OpenAI REST API. Please see https://platform.openai.com/docs/api-reference for more details.
 *
 * The version of the OpenAPI document: 2.3.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package com.openai.openapi.model;

import java.util.Objects;
import java.util.Arrays;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonTypeName;
import com.fasterxml.jackson.annotation.JsonValue;
import com.openai.openapi.model.FineTuneDPOMethod;
import com.openai.openapi.model.FineTuneSupervisedMethod;
import com.fasterxml.jackson.annotation.JsonPropertyOrder;
import com.fasterxml.jackson.annotation.JsonTypeName;
import java.io.UnsupportedEncodingException;
import java.net.URLEncoder;
import java.util.StringJoiner;

/**
 * The method used for fine-tuning.
 */
@JsonPropertyOrder({
  FineTuneMethod.JSON_PROPERTY_TYPE,
  FineTuneMethod.JSON_PROPERTY_SUPERVISED,
  FineTuneMethod.JSON_PROPERTY_DPO
})
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2025-02-28T10:23:25.420936454-05:00[US/Eastern]", comments = "Generator version: 7.11.0")
public class FineTuneMethod {
  /**
   * The type of method. Is either &#x60;supervised&#x60; or &#x60;dpo&#x60;.
   */
  public enum TypeEnum {
    SUPERVISED(String.valueOf("supervised")),
    
    DPO(String.valueOf("dpo"));

    private String value;

    TypeEnum(String value) {
      this.value = value;
    }

    @JsonValue
    public String getValue() {
      return value;
    }

    @Override
    public String toString() {
      return String.valueOf(value);
    }

    @JsonCreator
    public static TypeEnum fromValue(String value) {
      for (TypeEnum b : TypeEnum.values()) {
        if (b.value.equals(value)) {
          return b;
        }
      }
      throw new IllegalArgumentException("Unexpected value '" + value + "'");
    }
  }

  public static final String JSON_PROPERTY_TYPE = "type";
  @javax.annotation.Nullable
  private TypeEnum type;

  public static final String JSON_PROPERTY_SUPERVISED = "supervised";
  @javax.annotation.Nullable
  private FineTuneSupervisedMethod supervised;

  public static final String JSON_PROPERTY_DPO = "dpo";
  @javax.annotation.Nullable
  private FineTuneDPOMethod dpo;

  public FineTuneMethod() {
  }

  public FineTuneMethod type(@javax.annotation.Nullable TypeEnum type) {
    
    this.type = type;
    return this;
  }

  /**
   * The type of method. Is either &#x60;supervised&#x60; or &#x60;dpo&#x60;.
   * @return type
   */
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_TYPE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public TypeEnum getType() {
    return type;
  }


  @JsonProperty(JSON_PROPERTY_TYPE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setType(@javax.annotation.Nullable TypeEnum type) {
    this.type = type;
  }

  public FineTuneMethod supervised(@javax.annotation.Nullable FineTuneSupervisedMethod supervised) {
    
    this.supervised = supervised;
    return this;
  }

  /**
   * Get supervised
   * @return supervised
   */
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_SUPERVISED)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public FineTuneSupervisedMethod getSupervised() {
    return supervised;
  }


  @JsonProperty(JSON_PROPERTY_SUPERVISED)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setSupervised(@javax.annotation.Nullable FineTuneSupervisedMethod supervised) {
    this.supervised = supervised;
  }

  public FineTuneMethod dpo(@javax.annotation.Nullable FineTuneDPOMethod dpo) {
    
    this.dpo = dpo;
    return this;
  }

  /**
   * Get dpo
   * @return dpo
   */
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_DPO)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public FineTuneDPOMethod getDpo() {
    return dpo;
  }


  @JsonProperty(JSON_PROPERTY_DPO)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setDpo(@javax.annotation.Nullable FineTuneDPOMethod dpo) {
    this.dpo = dpo;
  }

  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    FineTuneMethod fineTuneMethod = (FineTuneMethod) o;
    return Objects.equals(this.type, fineTuneMethod.type) &&
        Objects.equals(this.supervised, fineTuneMethod.supervised) &&
        Objects.equals(this.dpo, fineTuneMethod.dpo);
  }

  @Override
  public int hashCode() {
    return Objects.hash(type, supervised, dpo);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class FineTuneMethod {\n");
    sb.append("    type: ").append(toIndentedString(type)).append("\n");
    sb.append("    supervised: ").append(toIndentedString(supervised)).append("\n");
    sb.append("    dpo: ").append(toIndentedString(dpo)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

  /**
   * Convert the instance into URL query string.
   *
   * @return URL query string
   */
  public String toUrlQueryString() {
    return toUrlQueryString(null);
  }

  /**
   * Convert the instance into URL query string.
   *
   * @param prefix prefix of the query string
   * @return URL query string
   */
  public String toUrlQueryString(String prefix) {
    String suffix = "";
    String containerSuffix = "";
    String containerPrefix = "";
    if (prefix == null) {
      // style=form, explode=true, e.g. /pet?name=cat&type=manx
      prefix = "";
    } else {
      // deepObject style e.g. /pet?id[name]=cat&id[type]=manx
      prefix = prefix + "[";
      suffix = "]";
      containerSuffix = "]";
      containerPrefix = "[";
    }

    StringJoiner joiner = new StringJoiner("&");

    // add `type` to the URL query string
    if (getType() != null) {
      try {
        joiner.add(String.format("%stype%s=%s", prefix, suffix, URLEncoder.encode(String.valueOf(getType()), "UTF-8").replaceAll("\\+", "%20")));
      } catch (UnsupportedEncodingException e) {
        // Should never happen, UTF-8 is always supported
        throw new RuntimeException(e);
      }
    }

    // add `supervised` to the URL query string
    if (getSupervised() != null) {
      joiner.add(getSupervised().toUrlQueryString(prefix + "supervised" + suffix));
    }

    // add `dpo` to the URL query string
    if (getDpo() != null) {
      joiner.add(getDpo().toUrlQueryString(prefix + "dpo" + suffix));
    }

    return joiner.toString();
  }

}

